@model TaskList.Models.Tasks

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label">Nome</label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="Cost" class="control-label">Custo</label>
                <input asp-for="Cost" class="form-control" type="number" />
                <span asp-validation-for="Cost" class="text-danger"></span>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="Deadline" class="control-label">Data de Limite</label>
                <input asp-for="Deadline" type="date" class="form-control" type="date"/>
                <span asp-validation-for="Deadline" class="text-danger"></span>
            </div>
            <hr />
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-success" /> |
                <a asp-action="Index" class="btn btn-primary">Retornar a lista</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var input = document.getElementById("Name");
            input.focus();
            var length = input.value.length; // Tamanho do texto no campo
            input.setSelectionRange(length, length); // Move o cursor para o final
        });
    </script>
}
